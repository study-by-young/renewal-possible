<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.possable.app.rent.mapper.RentHistoryMapper">
	<resultMap id="rentHistory" type="RentHistoryVO">
		<id property="seq" column="seq" />
		<result property="rentType" column="rent_type" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
		<result property="receiver" column="receiver" />
		<result property="price" column="price" />
		<result property="estimate" column="estimate" />
		<result property="status" column="status" />
		<result property="genDate" column="gen_date" />
		<result property="uptDate" column="upt_date" />
		<result property="takePlaceCode" column="take_place_code" />
		<result property="takePlaceBasic" column="take_place_basic" />
		<result property="takePlaceDetail" column="take_place_detail" />
		<result property="merchantUid" column="merchant_uid" />
		<result property="payMethod" column="pay_method" />
		<result property="phone" column="phone" />
		<result property="birth" column="birth" />
		<result property="email" column="email" />
        <result property="insuranceCode" column="insurance_code" />
        <result property="carSeq" column="car_seq"/>
        <result property="memSeq" column="mem_seq"/>
        <result property="cmpnSeq" column="cmpn_seq"/>
	</resultMap>
    <resultMap id="rentHistoryAllData" type="RentHistoryVO">
        <id property="seq" column="seq" />
        <result property="rentType" column="rent_type" />
        <result property="startDate" column="start_date" />
        <result property="endDate" column="end_date" />
        <result property="receiver" column="receiver" />
        <result property="price" column="price" />
        <result property="estimate" column="estimate" />
        <result property="status" column="status" />
        <result property="genDate" column="gen_date" />
        <result property="uptDate" column="upt_date" />
        <result property="takePlaceCode" column="take_place_code" />
        <result property="takePlaceBasic" column="take_place_basic" />
        <result property="takePlaceDetail" column="take_place_detail" />
        <result property="merchantUid" column="merchant_uid" />
        <result property="payMethod" column="pay_method" />
        <result property="phone" column="phone" />
        <result property="birth" column="birth" />
        <result property="email" column="email" />
        <association property="insuranceCodeVO"
                     column="{seq=car_seq,code=insurance_code}"
                     select="com.yedam.possable.app.car.mapper.CarMapper.getCarInsuranceByCode"
                     javaType="InsuranceOptionVO" />
        <association property="carVO"
                     column= "car_seq"
                     select="com.yedam.possable.app.car.mapper.CarMapper.getCar"
                     javaType="CarVO"/>
        <association property="memberVO"
                     column="mem_seq"
                     select="com.yedam.possable.app.member.mapper.MemberMapper.memberOneSelect"
                     javaType="MemberVO"/>
        <association property="companyVO"
                     column="cmpn_seq"
                     select="com.yedam.possable.app.company.mapper.CompanyMapper.companyOneSelect"
                     javaType="CompanyVO"/>
         <association property="statusCodeVO"
                     column="status"
                     select="com.yedam.possable.app.common.code.mapper.CodeMapper.getCodeByValue"
                     javaType="CodeSubVO"/>             
    </resultMap>

	<sql id="criteria">
		<trim prefixOverrides="and">
			<choose>
				<when test="cri.type == 'R'.toString()">
					RECEIVER LIKE '%' || #{cri.keyword} || '%'
				</when>
			</choose>
		</trim>
	</sql>
	
	<!-- <sql id="checkCriteria">
        <trim prefixOverrides="and">
                    <choose>
                        <when test="cri.type == 'A'.toString()">
                            STATUS LIKE '%' || 'RST01' || '%'
                        </when>
                        <when test="cri.type == 'B'.toString()">
                            STATUS LIKE '%' || 'RST02' || '%'
                        </when>
                           <when test="cri.type == 'C'.toString()">
                            STATUS LIKE '%' || 'RST03' || '%'
                        </when>
                        <when test="cri.type == 'D'.toString()">
                            STATUS LIKE '%' || 'RST04' || '%'
                        </when>
                    </choose>
        </trim>
    </sql> -->
    
    <sql id="checkCriteria">
        <trim prefix="(" suffix=")" prefixOverrides="OR">
            <foreach collection="cri.typeArr" item="cri.type">
                <trim prefix="OR">
                    <choose>
                          <when test="cri.type == 'A'.toString()">
                            STATUS LIKE '%' || 'RST01' || '%'
                        </when>
                        <when test="cri.type == 'B'.toString()">
                            STATUS LIKE '%' || 'RST02' || '%'
                        </when>
                           <when test="cri.type == 'C'.toString()">
                            STATUS LIKE '%' || 'RST03' || '%'
                        </when>
                        <when test="cri.type == 'D'.toString()">
                            STATUS LIKE '%' || 'RST04' || '%'
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <!-- 어드민 전용 렌트 내역 리스트-->
    <select id="getRentHistoryList" resultMap="rentHistoryAllData">
        SELECT
            /*+ INDEX_DESC(RENT_HISTORY IDX_RENT_HISTORY) */
            *
        FROM rent_history
    </select>

	<!-- 업체 렌트내역 리스트 -->
	<select id="getRentHistoryListByCmpnSeq" resultMap="rentHistoryAllData">
        SELECT
             /*+ INDEX_DESC(RENT_HISTORY IDX_RENT_HISTORY) */
             ROWNUM RN,
             RENT_HISTORY.*
             FROM RENT_HISTORY
                  <where>
                  	<include refid="criteria"/>
                  	<include refid="checkCriteria"/>
                     <![CDATA[
                     AND (CMPN_SEQ = #{cmpnSeq})
                     AND ROWNUM <= #{cri.pageNum} * #{cri.amount} ]]>
                 </where>
	</select>

	<!-- 업체 렌트내역 한건 -->
	<select id="getRentHistory" resultMap="rentHistoryAllData">
             SELECT
                 *
             FROM RENT_HISTORY
             WHERE SEQ = #{seq}
	</select>

	<select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM RENT_HISTORY
    </select>

    <select id="getRentHistoryListForMyPage" resultMap="rentHistoryAllData">
    	SELECT *
		FROM(
        	SELECT
        	/*+ INDEX_DESC(RENT_HISTORY IDX_RENT_HISTORY) */
       		ROWNUM RN,
            RENT_HISTORY.*,
       		<![CDATA[case When (SELECT count(*) FROM RENT_REVIEW where HISTORY_SEQ = RENT_HISTORY.seq) > 0 	THEN '2'
						  When trunc(END_DATE) < trunc(sysdate) then '1'
						  else '0' end]]> AS review
	       FROM RENT_HISTORY
       <where>
           and mem_seq = #{seq}
       		<![CDATA[   AND ROWNUM <= #{cri.pageNum} * #{cri.amount} ]]>
       </where>
      )
      	WHERE RN > (#{cri.pageNum} - 1) * #{cri.amount}
    </select>

    <!-- 하루 수익 -->
<!--     <select id="getCompanySales" resultType="RentHistoryVO">
    	select sum(price) as price, cmpn_seq, TO_TIMESTAMP(trunc(upt_date),'YYYY-MM-DD') as uptDate
    	from rent_history where cmpn_seq = #{cmpnSeq}
    	and status = 'RST03'
    	group by cmpn_seq,TO_TIMESTAMP(trunc(upt_date),'YYYY-MM-DD')
    	order by TO_TIMESTAMP(trunc(upt_date),'YYYY-MM-DD')     -->

    <!-- 하루 수익을 이렇게 구하나..? -->
    <select id="getLatestCompanySales" resultType="hashmap">
        SELECT
            *
        FROM (select
                 sum(price) as earn, cmpn_seq,
                 TO_CHAR(upt_date,'YYYY-MM-DD') as uptDate
         from rent_history
         where cmpn_seq = #{cmpnSeq}
           and status = 'RST01'
         group by cmpn_seq,TO_CHAR(upt_date,'YYYY-MM-DD')
         order by TO_CHAR(upt_date,'YYYY-MM-DD')
         )
        <![CDATA[WHERE ROWNUM <= 5]]>
    </select>

    <select id="getCompanyTodayCar" resultMap="rentHistoryAllData">
    	select
            *
        from rent_history
		where cmpn_seq = #{cmpnSeq}
		and status = 'RST01'
		and TO_TIMESTAMP(trunc(start_date),'YYYY-MM-DD') = TO_TIMESTAMP(trunc(sysdate),'YYYY-MM-DD')
    </select>

	<insert id="insertRentHistory">
        <selectKey keyProperty="seq" resultType="Long" order="BEFORE">
            SELECT SEQ_RENT_HISTORY.nextval FROM DUAL
        </selectKey>
        INSERT INTO RENT_HISTORY(
			SEQ
			, CAR_SEQ
			, MEM_SEQ
			, RENT_TYPE
			, START_DATE
			, END_DATE
			, RECEIVER
			, TAKE_PLACE_CODE
			, PRICE
			, ESTIMATE
			, STATUS
			, GEN_DATE
			, UPT_DATE
			, TAKE_PLACE_DETAIL
			, TAKE_PLACE_BASIC
			, MERCHANT_UID
			, PAY_METHOD
			, PHONE
			, BIRTH
			, EMAIL
			, INSURANCE_CODE
			, CMPN_SEQ
        )
        VALUES(
	        #{seq}
	        , #{carSeq}
	        , #{memSeq}
	        , #{rentType}
	        , #{startDate}
	        , #{endDate}
	        , #{receiver}
	        , #{takePlaceCode}
	        , #{price}
	        , #{estimate}
	        , #{status}
	        , SYSDATE
	        , SYSDATE
	        , #{takePlaceDetail}
	        , #{takePlaceBasic}
	        , #{merchantUid}
	        , #{payMethod}
	        , #{phone}
	        , #{birth}
	        , #{email}
	        , #{insuranceCode}
	        , #{cmpnSeq}
        )
    </insert>

	<select id="getRentHistoryForMypage" resultMap="rentHistoryAllData">
        SELECT *
        FROM RENT_HISTORY
        WHERE SEQ = #{seq}
    </select>

	<update id="refundRentHistory">
        UPDATE RENT_HISTORY
        SET STATUS = 'RST04'
        WHERE MERCHANT_UID = #{merchantUid}
    </update>

	<select id="getRentHistoryByMUid" resultMap="rentHistoryAllData">
        SELECT
            *
        FROM rent_history
        WHERE merchant_uid = #{merchantUid}
    </select>
</mapper>
