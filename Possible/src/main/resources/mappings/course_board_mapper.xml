<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.possable.app.community.course.mapper.CourseBoardMapper">

	<resultMap id="courseBoard" type="CourseBoardVO">
		<id property="seq" column="seq" />
		<result property="title" column="title" />
		<result property="writer" column="writer" />
		<result property="content" column="content" />
		<result property="views" column="views" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
		<result property="people" column="people" />
		<result property="genDate" column="gen_date" />
		<result property="uptDate" column="upt_date" />
	</resultMap>

	<sql id="criteria">
		<trim prefix="(" suffix=")" prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type == 'A'.toString()">
							CONTENTTYPEID=12 AND TITLE LIKE '%' || #{keyword} || '%'
						</when>
						<when test="type == 'C'.toString()">
							CONTENTTYPEID=14 AND TITLE LIKE '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<sql id="listCriteria">
		<trim prefix="(" suffix=")" prefixOverrides="OR">
        	<foreach collection="typeArr" item="type">
            	<trim prefix="OR">
            		<choose>
				    	<when test="type == 'T'.toString()">
				        	TITLE LIKE '%' || #{keyword} || '%'
				        </when>
				        <when test="type == 'C'.toString()">
				        	CONTENT LIKE '%' || #{keyword} || '%'
				        </when>
				        <when test="type == 'W'.toString()">
				        	WRITER LIKE '%' || #{keyword} || '%'
				        </when>
            		</choose>
            	</trim>
            </foreach>
    	</trim>
	</sql>
	
	<select id="getTotalCount" resultType="int">
			SELECT COUNT(*) 
			FROM COURSE_BOARD
			<where>
				<include refid="criteria"></include>
			</where>
	</select>
	
<!-- 	<select id="tourList11" resultType="TestVO">
		SELECT * FROM TOUR
		<where> 
        	<include refid="criteria"></include>
        </where>
	</select> -->
	
	<select id="tourList" parameterType="Criteria" resultType="TestVO">
		SELECT /*+ INDEX_ASC(TOUR IDX_TOUR)*/ * FROM TOUR
		<where> 
			<if test="type == 'R'.toString()">
				AND ADDR1 IS NOT NULL AND ADDR1 LIKE '%' || #{keyword} || '%'
			</if>
        	<if test="type == 'A'.toString()">
				AND ADDR1 IS NOT NULL AND CONTENTTYPEID=12 AND TITLE LIKE '%' || #{keyword} || '%'
			</if>
			<if test="type == 'C'.toString()">
				AND ADDR1 IS NOT NULL AND CONTENTTYPEID=14 AND TITLE LIKE '%' || #{keyword} || '%'
			</if>
			<if test="type == 'T'.toString()">
				AND ADDR1 IS NOT NULL AND (TITLE LIKE '%' || #{keyword} || '%' OR ADDR1 LIKE '%' || #{keyword} || '%')
			</if>
        </where>
	</select>

	<select id="getList" resultType="CourseBoardVO">
		SELECT B.SEQ, B.TITLE, B.WRITER, B.CONTENT, B.VIEWS, B.START_DATE, B.END_DATE, B.PEOPLE, B.GEN_DATE, B.UPT_DATE, J.FIRSTIMAGE
		FROM (
			SELECT /*+ INDEX_DESC(COURSE_BOARD IDX_COURSE_BOARD) */ 
			ROWNUM RN, SEQ, TITLE, WRITER, CONTENT, VIEWS, START_DATE, END_DATE, PEOPLE, GEN_DATE, UPT_DATE
			FROM COURSE_BOARD
			<where> 
                <include refid="listCriteria"></include>
                <![CDATA[   AND ROWNUM <= #{pageNum} * #{amount} ]]>
             </where>
			) B
		LEFT JOIN (SELECT * FROM (SELECT C.COURSE_SEQ, T.FIRSTIMAGE, ROW_NUMBER() OVER (PARTITION BY C.COURSE_SEQ ORDER BY C.COURSE_SEQ DESC) AS RankNo FROM COURSE C JOIN TOUR T ON C.CONTENTID = T.CONTENTID WHERE T.FIRSTIMAGE IS NOT NULL) WHERE RankNo = 1) J
		ON B.SEQ = J.COURSE_SEQ
		WHERE RN > (#{pageNum} - 1) * #{amount}
		ORDER BY SEQ DESC
	</select>
	
	<!-- 마이페이지 나의 코스 리스트 조회 -->
	<select id="getUserCourseList" resultType="CourseBoardVO">
		SELECT B.SEQ, B.TITLE, B.WRITER, B.CONTENT, B.VIEWS, B.START_DATE, B.END_DATE, B.PEOPLE, B.GEN_DATE, B.UPT_DATE, J.FIRSTIMAGE
		FROM (
			SELECT /*+ INDEX_DESC(COURSE_BOARD IDX_COURSE_BOARD) */ 
			ROWNUM RN, SEQ, TITLE, WRITER, CONTENT, VIEWS, START_DATE, END_DATE, PEOPLE, GEN_DATE, UPT_DATE
			FROM COURSE_BOARD
			 <where>
            	<![CDATA[ ROWNUM <= #{cri.pageNum} * #{cri.amount} ]]>
            </where>
             AND WRITER = #{writer}
			) B
		LEFT JOIN (SELECT * FROM (SELECT C.COURSE_SEQ, T.FIRSTIMAGE, ROW_NUMBER() OVER (PARTITION BY C.COURSE_SEQ ORDER BY C.COURSE_SEQ DESC) AS RankNo FROM COURSE C JOIN TOUR T ON C.CONTENTID = T.CONTENTID WHERE T.FIRSTIMAGE IS NOT NULL) WHERE RankNo = 1) J
		ON B.SEQ = J.COURSE_SEQ
		WHERE RN > (#{cri.pageNum} - 1) * #{cri.amount}
	</select>
	
	<select id="read" resultType="CourseBoardVO">
		SELECT * FROM COURSE_BOARD WHERE SEQ = #{seq}
	</select>
	
	<select id="getWriter" resultType="CourseBoardVO">
		SELECT * FROM COURSE_BOARD WHERE WRITER = #{writer}
	</select>
	
	<insert id="insert">
		<selectKey keyProperty="seq" resultType="long" order="BEFORE">
			SELECT SEQ_COURSE_BOARD.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO COURSE_BOARD VALUES (#{seq}, #{title}, #{writer}, #{content}, 0, #{startDate}, #{endDate}, #{people}, #{genDate}, SYSDATE)
	</insert>
	
	<select id="courseCnt" resultType="int">
		SELECT COUNT(*) FROM COURSE WHERE COURSE_SEQ = #{seq}
	</select>
	
	<select id="courseSelect" resultType="TestVO">
		SELECT t.* FROM TOUR t JOIN COURSE c ON t.CONTENTID = c.CONTENTID WHERE c.COURSE_SEQ = #{seq}
	</select>
	
	<insert id="courseInsert">
		<selectKey keyProperty="seq" resultType="long" order="BEFORE">
			SELECT SEQ_COURSE.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO COURSE VALUES (#{courseSeq}, #{seq}, #{placeNo}, #{contentId})
	</insert>
	
	<update id="plusViews">
		UPDATE COURSE_BOARD
		SET VIEWS = VIEWS + 1
		WHERE SEQ = #{seq}
	</update>
	
	<insert id="plusLike">
		<selectKey keyProperty="seq" resultType="long" order="BEFORE">
			SELECT SEQ_COURSE_BOARD_LIKE.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO COURSE_BOARD_LIKE VALUES(#{seq}, #{memberSeq}, #{boardSeq})
	</insert>
	
	<delete id="minusLike">
		DELETE FROM COURSE_BOARD_LIKE WHERE BOARD_SEQ = #{boardSeq} AND MEMBER_SEQ = #{memberSeq}
	</delete>
	
	<select id="countLike" resultType="int">
		SELECT COUNT(*) FROM COURSE_BOARD_LIKE WHERE BOARD_SEQ = #{seq}
	</select>
	
	<select id="checkLike" resultType="int">
		SELECT COUNT(*) FROM COURSE_BOARD_LIKE WHERE BOARD_SEQ = #{seq} AND MEMBER_SEQ = #{memberSeq}
	</select>

	<delete id="delete">
		DELETE FROM COURSE_BOARD WHERE SEQ = #{seq}
	</delete>
	
</mapper>
